{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAC9B,EAAoCC,mBAAS,KAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeG,OACI,sBAAMC,SAVQ,SAAEC,GACtBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKV,SACI,uBACAO,KAAK,OACLC,MAAUT,EACVU,SAlBe,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCRhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAYH,GAFhD,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBbM,GAhBa,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEpC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,wDAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,4BAAKA,QCFJS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAEvB,ECJ0B,SAAEA,GAG9B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAW,WAEX1B,EAASC,GACR0B,MAAM,SAAAC,GAEHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAKd,CAAEtB,IAKEuB,EDrB4BK,CAAc5B,GAAlCa,EAAb,EAAQN,KAAae,EAArB,EAAqBA,QAEnB,OAEG,qCACA,qBAAIJ,UAAU,4DAAd,cAA6ElB,EAA7E,OACEsB,GAAW,mBAAGJ,UAAU,mDAAb,qBACd,qBAAKA,UAAU,YAAf,SAGFL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADEA,EAAIC,aEZLkB,EAAe,WAG1B,MAAsC3C,mBAAS,CAAE,YAAjD,mBAAQ4C,EAAR,KAAoB7C,EAApB,KAEE,OAEC,qCACD,wDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEK6C,EAAWrB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEAA,SAAaA,GADLA,YCXF+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAI1BX,M","file":"static/js/main.67b6d504.chunk.js","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport PropTypes from \"prop-types\"; \n\nexport const AddCategory = ( { setCategories } ) => {\n const [inputValue, setInputValue] = useState(\" \");\n\n const handleInputChange = ( e ) =>{\n     setInputValue( e.target.value)\n }\n\n const handleSubmit = ( e ) =>{\n  e.preventDefault();\n\n if ( inputValue.trim().length > 2 ){\n    setCategories(cate =>[ inputValue, ...cate, ]);\n    setInputValue(\"\")\n   }\n    \n }\n    return (\n        <form onSubmit =  { handleSubmit } > \n            <input \n            type=\"text\"\n            value = { inputValue }\n            onChange ={ handleInputChange }\n            />\n         </form>\n        \n    )\n   \n}\nAddCategory.propTypes = {\n       setCategories: PropTypes.func.isRequired\n   }","export const getGifs = async( category ) =>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI ( category )}&limit=10&api_key=WSnAZXv4VPuRV7ZtuhFFn6UbhSuZU8nn`\n    \n    const resp = await fetch( url );\n    //api.giphy.com/v1/gifs/search?q=${ encodeURI ( category ) }&limit=10&api_key=WSnAZXv4VPuRV7ZtuhFFn6UbhSuZU8nn`\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n   return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url} ) => {\n    console.log(id, title, url)\n    return (\n        <div className=\"card animate__animated animate__bounce animate__flash\">\n            <img src={ url } alt={ title }></img>\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React, { useState, useEffect} from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ({category}) => {\n\n  const { data:images, loading } = useFetchGifs( category );\n  \n    return ( \n\n       <>\n       <h3 className=\"class=animate__animated animate__bounce animate__delay-2s\"> { category } </h3>\n       { loading && <p className=\"animate__animated animate__bounce animate__flash\">Loading</p>}\n      <div className=\"card-grid\">\n\n    {\n    images.map( img =>(\n        <GifGridItem\n        key={ img.id }\n        {...img} \n        />\n    ))\n\n    }  \n    </div>\n\n    \n     \n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) =>{\n\n\nconst [state, setState] = useState({\n    data: [],\n    loading: true   \n});\n\nuseEffect( ()=>{\n\ngetGifs( category )\n.then( imgs => {\n      \n    setState({ \n        data :imgs,\n        loading: false\n    });\n\n});\n    \n}, [ category])\n\n\n\n\nreturn state;\n}","import React from \"react\";\nimport { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\n\n\nexport const GifExpertApp = () =>{\n\n\n  const [ categories, setCategories ] = useState([ \"Rihanna\"]);\n\n    return (\n\n     <> \n    <h2> WelcomeToTheDiscoApp </h2>\n    <AddCategory setCategories={ setCategories }/>\n    <hr  />\n   \n    <ol>\n        {\n         categories.map( category =>  \n         <GifGrid \n         key = { category }\n         category = { category }/>\n    \n         )\n        }\n         </ol>\n     </>\n\n    )\n  \n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}